-- MySQL Script generated by MySQL Workbench
-- Wed Jun 20 01:17:55 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema genesis
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema genesis
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `genesis` DEFAULT CHARACTER SET utf8mb4 ;
USE `genesis` ;

-- -----------------------------------------------------
-- Table `genesis`.`artist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`artist` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `firstname` VARCHAR(200) NOT NULL,
  `lastname` VARCHAR(200) NOT NULL,
  `created_at` INT UNSIGNED NOT NULL,
  `updated_at` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`album` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `created_at` INT UNSIGNED NOT NULL,
  `updated_at` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`track`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`track` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `created_at` INT UNSIGNED NOT NULL,
  `updated_at` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`genre` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `created_at` INT UNSIGNED NOT NULL,
  `updated_at` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(125) NOT NULL,
  `auth_key` VARCHAR(64) NOT NULL,
  `password_hash` VARCHAR(255) NOT NULL,
  `created_at` INT UNSIGNED NOT NULL,
  `updated_at` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`favorite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`favorite` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `entity_id` INT UNSIGNED NOT NULL,
  `type` SMALLINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `user_favorite_idx` (`user_id` ASC),
  CONSTRAINT `user_favorite`
    FOREIGN KEY (`user_id`)
    REFERENCES `genesis`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`artist_album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`artist_album` (
  `artist_id` INT UNSIGNED NOT NULL,
  `album_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`artist_id`, `album_id`),
  INDEX `album_to_artist_idx` (`album_id` ASC),
  CONSTRAINT `artist_to_album`
    FOREIGN KEY (`artist_id`)
    REFERENCES `genesis`.`album` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `album_to_artist`
    FOREIGN KEY (`album_id`)
    REFERENCES `genesis`.`artist` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`track_album`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`track_album` (
  `track_id` INT UNSIGNED NOT NULL,
  `album_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`track_id`, `album_id`),
  INDEX `album_to_track_idx` (`album_id` ASC),
  CONSTRAINT `album_to_track`
    FOREIGN KEY (`album_id`)
    REFERENCES `genesis`.`album` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `track_to_album`
    FOREIGN KEY (`track_id`)
    REFERENCES `genesis`.`track` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`track_genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`track_genre` (
  `track_id` INT UNSIGNED NOT NULL,
  `genre_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`track_id`, `genre_id`),
  INDEX `genre_to_track_idx` (`genre_id` ASC),
  CONSTRAINT `track_to_genre`
    FOREIGN KEY (`track_id`)
    REFERENCES `genesis`.`genre` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `genre_to_track`
    FOREIGN KEY (`genre_id`)
    REFERENCES `genesis`.`track` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `genesis`.`artist_track`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `genesis`.`artist_track` (
  `artist_id` INT UNSIGNED NOT NULL,
  `track_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`artist_id`, `track_id`),
  INDEX `track_to_artist_idx` (`track_id` ASC),
  CONSTRAINT `artist_to_track`
    FOREIGN KEY (`artist_id`)
    REFERENCES `genesis`.`artist` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `track_to_artist`
    FOREIGN KEY (`track_id`)
    REFERENCES `genesis`.`track` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
